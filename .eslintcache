[{"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reportWebVitals.js":"1","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\App.js":"2","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\login.js":"3","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\types.js":"4","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\index.js":"5","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\registerAction.js":"6","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\loginReducer.js":"7","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\loginActions.js":"8","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\registerReducer.js":"9","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\index.js":"10","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\facultyMain.js":"11","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\appNavbar.js":"12","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\store.js":"13","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\assets\\assignments\\assignments.js":"14","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\imageUpload.js":"15","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\studentMain.js":"16","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\subjectAssignments.js":"17","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\createAssignment.js":"18","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo.js":"19","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo1.js":"20","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo2.js":"21","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo3.js":"22","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo4.js":"23","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\rsa.js":"24"},{"size":362,"mtime":1606390638599,"results":"25","hashOfConfig":"26"},{"size":1902,"mtime":1609474940508,"results":"27","hashOfConfig":"26"},{"size":10584,"mtime":1609390910466,"results":"28","hashOfConfig":"26"},{"size":219,"mtime":1606990802243,"results":"29","hashOfConfig":"26"},{"size":260,"mtime":1606799354905,"results":"30","hashOfConfig":"26"},{"size":715,"mtime":1606822804515,"results":"31","hashOfConfig":"26"},{"size":1170,"mtime":1607062177660,"results":"32","hashOfConfig":"26"},{"size":1398,"mtime":1607063238761,"results":"33","hashOfConfig":"26"},{"size":512,"mtime":1606822724560,"results":"34","hashOfConfig":"26"},{"size":500,"mtime":1606390638599,"results":"35","hashOfConfig":"26"},{"size":5250,"mtime":1609477634606,"results":"36","hashOfConfig":"26"},{"size":1915,"mtime":1607145653863,"results":"37","hashOfConfig":"26"},{"size":300,"mtime":1606796879409,"results":"38","hashOfConfig":"26"},{"size":395,"mtime":1609387927228,"results":"39","hashOfConfig":"26"},{"size":966,"mtime":1606920563252,"results":"40","hashOfConfig":"26"},{"size":1807,"mtime":1609476524754,"results":"41","hashOfConfig":"26"},{"size":5502,"mtime":1609395580246,"results":"42","hashOfConfig":"26"},{"size":3469,"mtime":1609477777592,"results":"43","hashOfConfig":"26"},{"size":15140,"mtime":1609477836364,"results":"44","hashOfConfig":"26"},{"size":11305,"mtime":1609477813663,"results":"45","hashOfConfig":"26"},{"size":11865,"mtime":1609477392759,"results":"46","hashOfConfig":"26"},{"size":16916,"mtime":1609395228137,"results":"47","hashOfConfig":"26"},{"size":11975,"mtime":1609396364066,"results":"48","hashOfConfig":"26"},{"size":4594,"mtime":1609474720808,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pfooc6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":6,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reportWebVitals.js",[],["109","110"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\App.js",["111"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport AppNavbar from './components/appNavbar';\r\nimport Login from './components/login';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport FacultyMain from \"./components/facultyMain\";\r\nimport ImageUpload from './components/imageUpload';\r\nimport StudentMain from './components/studentMain';\r\nimport SubjectAssignments from './components/subjectAssignments';\r\nimport CreateAssignment from './components/createAssignment';\r\nimport demo from './components/demo';\r\nimport demo1 from './components/demo1';\r\nimport demo2 from './components/demo2';\r\nimport demo3 from './components/demo3';\r\nimport demo4 from './components/demo4';\r\n\r\nclass App extends Component{\r\n    render() {\r\n        return (\r\n            <Provider store={store} >\r\n                <BrowserRouter>\r\n                    <AppNavbar />\r\n                    <Switch>\r\n                        <Route exact path='/' component={Login} />\r\n                        <Route path='/facultymain' component={FacultyMain} />\r\n                        <Route path='/studentmain' component={StudentMain} />\r\n                        <Route path='/subjectassignments' component={SubjectAssignments} />\r\n                        <Route path='/create' component={CreateAssignment} />\r\n                        <Route path='/demo' component={demo} />\r\n                        <Route path='/demo1' component={demo1} />\r\n                        <Route path='/demo2' component={demo2} />\r\n                        <Route path='/demo3' component={demo3} />\r\n                        <Route path='/demo4' component={demo4} />\r\n\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\login.js",["112"],"import React, { Component } from 'react';\r\nimport { Alert, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Label, Input, Form, Spinner } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../actions/registerAction';\r\nimport { loginStudent, loginFaculty } from '../actions/loginActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        activeTab : '1',\r\n        name: '',\r\n        prn: '',\r\n        email: '',\r\n        password: '',\r\n        year: null,\r\n        email_login: '',\r\n        password_login: '',\r\n        redirect: false,\r\n        type: null\r\n    }\r\n\r\n    static propTypes = {\r\n        register: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n        login_msg: PropTypes.string.isRequired,\r\n        reg_msg: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, prn, email, password, year } = this.state;\r\n        const newUser = {\r\n            name, prn, email, password, year\r\n        };\r\n        this.props.register(newUser);\r\n    }\r\n\r\n    onSubmitLogin = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const { email_login, password_login } = this.state;\r\n        const newUser = {\r\n            email_login, password_login\r\n        };\r\n        if(this.state.type === \"Faculty\") this.props.loginFaculty(newUser);\r\n        else this.props.loginStudent(newUser);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: \"50px\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 m-auto\">\r\n                        <Nav tabs>\r\n                            <NavItem style={{ width: \"50%\" }}>\r\n                                <NavLink\r\n                                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                                    onClick={() => this.setState({ activeTab: '1' })}\r\n                                    style={{textAlign: \"center\"}}\r\n                                >\r\n                                    Login\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={{ width: \"50%\" }}>\r\n                                <NavLink\r\n                                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                                    onClick={() => this.setState({ activeTab: '2' })}\r\n                                    style={{textAlign: \"center\"}}\r\n                                >\r\n                                    Register\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={this.state.activeTab} className=\"tab\">\r\n                            <TabPane tabId=\"1\" className=\"tabpane\">\r\n                            { this.props.login_msg ? <Alert color=\"danger\">{this.props.login_msg}</Alert> : null}\r\n                            <div className=\"row row-content\">\r\n                                <div className=\"col-12\">\r\n                                    <Row className=\"form-group\">\r\n                                            <Label htmlfor=\"email_login\" md={2}>Email</Label>\r\n                                            <Col md={10}>\r\n                                                <Input type=\"email\" id=\"email_login\" name=\"email_login\" placeholder=\"Enter your email\" onChange={this.onChange} />\r\n                                            </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                            <Label htmlfor=\"password_login\" md={2}>Password</Label>\r\n                                            <Col md={10}>\r\n                                                <Input type=\"password\" id=\"password_login\" name=\"password_login\" placeholder=\"Enter your password\" onChange={this.onChange} />\r\n                                            </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlfor=\"type\" md={2}>Type</Label>\r\n                                        <Col md={10}>\r\n                                            <Input type=\"select\" name=\"type\" id=\"type\" onChange={this.onChange}>\r\n                                                <option>select</option>\r\n                                                <option>Faculty</option>\r\n                                                <option>Student</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{size:10, offset: 2}}>\r\n                                            <Button type=\"submit\" color=\"primary\" onClick={this.onSubmitLogin}>Login</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    { this.props.isAuthenticated === true ?\r\n                                        this.props.type === \"Faculty\" ? <Redirect to=\"/facultymain\" /> : <Redirect to=\"/studentmain\" /> :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\" className=\"tabpane\">\r\n                                { this.props.reg_msg ? \r\n                                    this.props.reg_msg === \"Registration successful, please login\"?\r\n                                    <Alert color=\"success\">{this.props.reg_msg}</Alert>:\r\n                                    <Alert color=\"danger\">{this.props.reg_msg}</Alert> :\r\n                                    null\r\n                                }\r\n                                <div className=\"row row-content\">\r\n                                    <div className=\"col-12\">\r\n                                        <Form id=\"register\">\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"name\" md={2}>Name</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter your name\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"prn\" md={2}>PRN</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"text\" id=\"prn\" name=\"prn\" placeholder=\"Enter your PRN\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"password\" md={2}>Password</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"year\" md={2}>Year</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"select\" name=\"year\" id=\"year\" onChange={this.onChange}>\r\n                                                        <option>select</option>\r\n                                                        <option>First Year</option>\r\n                                                        <option>Second Year</option>\r\n                                                        <option>Third Year</option>\r\n                                                        <option>Final Year</option>\r\n                                                    </Input>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Col md={{size:10, offset: 2}}>\r\n                                                    <Button type=\"submit\" color=\"success\" onClick={this.onSubmitRegister}>Register</Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        id: state.login.id,\r\n        name: state.login.name,\r\n        email: state.login.email,\r\n        isAuthenticated: state.login.isAuthenticated,\r\n        login_msg: state.login.msg,\r\n        reg_msg: state.register.msg,\r\n        type: state.login.type\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { register, loginStudent, loginFaculty })(Login);",["113","114"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\types.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\index.js",[],["115","116"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\registerAction.js",[],["117","118"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\loginReducer.js",["119"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\loginActions.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\registerReducer.js",["120"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\index.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\facultyMain.js",["121","122","123"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\appNavbar.js",["124","125"],"import React, { Component } from 'react';\r\nimport { \r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport App from '../App';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../actions/loginActions';\r\n\r\nclass AppNavbar extends Component {\r\n\r\n    state = {\r\n        isOpen :false\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n\r\n    toogle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                    <Container>\r\n                        <NavbarBrand>WCE Virtual Labs</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                {this.props.isAuthenticated === true ? \r\n                                <NavItem>\r\n                                    <NavLink style={{ cursor: \"pointer\" }} onClick={this.props.logout}>Logout</NavLink>\r\n                                </NavItem> : null  \r\n                            }  \r\n                            { this.props.isAuthenticated === false ? <Redirect to=\"/\" /> : null}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.login.isAuthenticated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(AppNavbar);","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\store.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\assets\\assignments\\assignments.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\imageUpload.js",["126","127"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ImageUpload extends Component {\r\n\r\n    state ={\r\n        file: null\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({ file: e.target.files[0] });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n \r\n        const formData = new FormData();\r\n\r\n        formData.append(\"img\", this.state.file, \"Bhagyaraj\");\r\n    \r\n        fetch(\"http://localhost:5000/\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(r => {\r\n            console.log(r);\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" id=\"file\" name=\"file\" onChange={this.onChange}></input>\r\n                <button onClick={this.onSubmit}>Upload</button>\r\n                <img id=\"image\" src={`http://localhost:5000/Bhagyaraj`} className=\"img-fluid\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUpload;",["128","129"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\studentMain.js",["130"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\subjectAssignments.js",["131","132","133"],"import React, { Component } from 'react';\r\nimport {\r\n  Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button, Container, Row, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport image from '../logo.jpeg';\r\nimport { ASSIGNMENTS } from '../assets/assignments/assignments';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderAssignment({assignment , onClick}) {\r\n    return(\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n            <CardBody>\r\n                <CardTitle tag=\"h5\">{assignment.name}</CardTitle>\r\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: {assignment.subject} </CardSubtitle>\r\n                <CardText> Due: {assignment.due} </CardText>\r\n                <Button color=\"primary\" onClick={onClick}>Open</Button>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nclass SubjectAssignments extends Component {\r\n\r\n    onClick = () => {\r\n        this.props.history.push();\r\n    }\r\n\r\n    render() {\r\n        // const assignments = ASSIGNMENTS.map(assignment =>{\r\n        //     return(\r\n        //         <div key={assignment.id} className=\"col-md-3 m-4 d-flex\">\r\n        //             <RenderAssignment assignment={assignment} onClick={this.onClick(assignment.link)} />\r\n        //         </div>\r\n        //     )\r\n        // })\r\n\r\n        return (\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Subject Name</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Row className=\"d-flex\">\r\n                    <div className=\"col-md-3 m-4\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Shift Cipher</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Hill Cipher</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo1')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">RSA Algorithm</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo2')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Steganography</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo3')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Data Encryption Standard DES</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo4')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubjectAssignments;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\createAssignment.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo.js",["134","135","136","137","138"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo1.js",["139","140"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Container, ListGroup, ListGroupItemHeading, ListGroupItem, ListGroupItemText, Input, Button, Form, FormGroup, Label, Breadcrumb, BreadcrumbItem, ButtonGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport img1 from '../assets/images/demo1_1.png';\r\nimport img2 from '../assets/images/demo1_2.png';\r\nimport img3 from '../assets/images/demo1_3.png';\r\nimport img4 from '../assets/images/demo1_4.png';\r\nimport img5 from '../assets/images/demo1_5.png';\r\n\r\nclass demo1 extends Component {\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to=\"/subjectassignments\">Subject</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Hill Cipher</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3\">Hill Cipher</h1>\r\n                    <p className=\"lead\"></p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className=\"lead\">Created on : 20 November, 2020 <br/>  Last edit : 1 December, 2020 <br/>   Due date : 20 December, 2020</p>\r\n                    <p className=\"lead\">\r\n                        <Button color=\"success\">Mark as done</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Introduction</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>The Hill cipher is a polygraphic substitution cipher built on concepts from Linear Algebra. The Hill cipher makes use of modulo arithmetic, matrix multiplication, and matrix inverses; hence, it is a more mathematical cipher than others. The Hill cipher is also a block cipher, so, theoretically, it can work on arbitrary sized blocks.\r\n                            <br/>Since the Hill cipher is fairly complex, let’s encrypt the text “CODE” and, later, decrypt the resulting ciphertext to understand how the Hill cipher works. To keep the example simple, we will use a straightforward substitution scheme where the letter A is mapped to 0, B is mapped to 1, etc. to stick to a 2x2 key matrix. The complexity of the Hill cipher increases with the size of the key matrix.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Encryption</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Encrypting with the Hill cipher is built on the following operation:\r\n                                <br/><strong>E(K, P) = (K*P) mod 26</strong>\r\n                                <br/>Where K is our key matrix and P is the plaintext in vector form. Matrix multiplying these two terms produces the encrypted ciphertext. <br/>Let's do so step by step:\r\n                                <ol>\r\n                                    <li>\r\n                                        <p>\r\n                                        Pick a keyword to encrypt your plaintext message. Let’s work with the random keyword “DCDF”. Convert this keyword to matrix form using your substitution scheme to convert it to a numerical 2x2 key matrix.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img1} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>\r\n                                        Next, we will convert our plaintext message to vector form. Since our key matrix is 2x2, the vector needs to be 2x1 for matrix multiplication to be possible. In our case, our message is four letters long so we can split it into blocks of two and then substitute to get our plaintext vectors.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img2} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>\r\n                                        Now, we can matrix multiply the key matrix with each 2x1 plaintext vector, take the moduli of the resulting 2x1 vectors by 26, and concatenate the results to get “WWVA”, the final ciphertext.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img3} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                </ol>\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Decryption</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Decrypting with the Hill cipher is built on the following operation:\r\n                                <br/><strong style={{textAlign: \"center\"}}>D(K, C) = (K-1 *C) mod 26</strong>\r\n                                <br/>Where K is our key matrix and C is the ciphertext in vector form. Matrix multiplying the inverse of the key matrix with the ciphertext produces the decrypted plaintext. <br/>Let's do this step by step with our ciphertext, \"WWVA\":\r\n                                <ol>\r\n                                    <li>\r\n                                        <p>\r\n                                        First, we calculate the inverse of the key matrix. In doing so, we must keep the result between 0-25 using modulo 26. For this reason, the Extended Euclidean algorithm is used to find the modular multiplicative inverse of the key matrix determinant.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img4} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>\r\n                                        2.\tNext, we will multiply 2x1 blocks of the ciphertext with the inverse of the key matrix to get our original plaintext message, “CODE,” back.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img5} alt=\"\"  style={{height:\"400px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                </ol>\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference video</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe width=\"100%\" height=\"554\" src=\"https://www.youtube.com/embed/qe8RZH2SX14\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    {/* <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference ppt</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe width=\"100%\" height=\"554\" src=\"https://walchandsangliacin-my.sharepoint.com/personal/bhagyaraj_haranale_walchandsangli_ac_in/_layouts/15/Doc.aspx?sourcedoc={b7dfd190-4c29-4f63-99c5-55a7b4ddab78}&amp;action=embedview&amp;wdAr=1.7777777777777777\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem> */}\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) What are the limitations of  Hill’s cipher?</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Input type=\"textarea\" rows=\"8\"></Input>\r\n                            <br/>\r\n                            <Button color=\"primary\">Submit Answer</Button>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) Polygraphic substitution is a _________ substitution where a block of letters is substituted by a word, character, number, etc.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Uniform. (ANS)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Non Uniform.\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Arbitrary\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        None of the above.\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n                <br />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo1;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo2.js",["141","142","143","144","145","146"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo3.js",["147","148","149","150","151"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo4.js",["152","153","154","155","156"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\rsa.js",["157","158","159","160","161","162","163","164","165","166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":19},{"ruleId":"171","severity":1,"message":"175","line":2,"column":99,"nodeType":"173","messageId":"174","endLine":2,"endColumn":106},{"ruleId":"167","replacedBy":"176"},{"ruleId":"169","replacedBy":"177"},{"ruleId":"167","replacedBy":"178"},{"ruleId":"169","replacedBy":"179"},{"ruleId":"167","replacedBy":"180"},{"ruleId":"169","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":12,"column":1,"nodeType":"184","endLine":44,"endColumn":2},{"ruleId":"182","severity":1,"message":"183","line":7,"column":1,"nodeType":"184","endLine":21,"endColumn":2},{"ruleId":"171","severity":1,"message":"185","line":3,"column":18,"nodeType":"173","messageId":"174","endLine":3,"endColumn":32},{"ruleId":"171","severity":1,"message":"186","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":18},{"ruleId":"171","severity":1,"message":"187","line":27,"column":15,"nodeType":"173","messageId":"174","endLine":27,"endColumn":26},{"ruleId":"171","severity":1,"message":"188","line":11,"column":5,"nodeType":"173","messageId":"174","endLine":11,"endColumn":11},{"ruleId":"171","severity":1,"message":"189","line":14,"column":8,"nodeType":"173","messageId":"174","endLine":14,"endColumn":11},{"ruleId":"171","severity":1,"message":"190","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":35,"column":17,"nodeType":"193","endLine":35,"endColumn":97},{"ruleId":"167","replacedBy":"194"},{"ruleId":"169","replacedBy":"195"},{"ruleId":"171","severity":1,"message":"196","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"185","line":3,"column":18,"nodeType":"173","messageId":"174","endLine":3,"endColumn":32},{"ruleId":"171","severity":1,"message":"197","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":21},{"ruleId":"171","severity":1,"message":"198","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":26},{"ruleId":"171","severity":1,"message":"199","line":2,"column":166,"nodeType":"173","messageId":"174","endLine":2,"endColumn":177},{"ruleId":"200","severity":1,"message":"201","line":126,"column":25,"nodeType":"193","endLine":126,"endColumn":236},{"ruleId":"200","severity":1,"message":"201","line":132,"column":25,"nodeType":"193","endLine":132,"endColumn":294},{"ruleId":"202","severity":1,"message":"203","line":132,"column":317,"nodeType":"204","endLine":132,"endColumn":332},{"ruleId":"202","severity":1,"message":"203","line":132,"column":408,"nodeType":"204","endLine":132,"endColumn":423},{"ruleId":"171","severity":1,"message":"199","line":2,"column":166,"nodeType":"173","messageId":"174","endLine":2,"endColumn":177},{"ruleId":"200","severity":1,"message":"201","line":92,"column":25,"nodeType":"193","endLine":92,"endColumn":236},{"ruleId":"171","severity":1,"message":"199","line":2,"column":166,"nodeType":"173","messageId":"174","endLine":2,"endColumn":177},{"ruleId":"200","severity":1,"message":"201","line":82,"column":25,"nodeType":"193","endLine":82,"endColumn":101},{"ruleId":"200","severity":1,"message":"201","line":88,"column":25,"nodeType":"193","endLine":88,"endColumn":139},{"ruleId":"200","severity":1,"message":"201","line":94,"column":25,"nodeType":"193","endLine":94,"endColumn":294},{"ruleId":"202","severity":1,"message":"203","line":94,"column":317,"nodeType":"204","endLine":94,"endColumn":332},{"ruleId":"202","severity":1,"message":"203","line":94,"column":408,"nodeType":"204","endLine":94,"endColumn":423},{"ruleId":"171","severity":1,"message":"199","line":2,"column":166,"nodeType":"173","messageId":"174","endLine":2,"endColumn":177},{"ruleId":"200","severity":1,"message":"201","line":131,"column":25,"nodeType":"193","endLine":131,"endColumn":236},{"ruleId":"200","severity":1,"message":"201","line":137,"column":25,"nodeType":"193","endLine":137,"endColumn":143},{"ruleId":"202","severity":1,"message":"203","line":137,"column":166,"nodeType":"204","endLine":137,"endColumn":181},{"ruleId":"202","severity":1,"message":"203","line":137,"column":257,"nodeType":"204","endLine":137,"endColumn":272},{"ruleId":"171","severity":1,"message":"199","line":2,"column":166,"nodeType":"173","messageId":"174","endLine":2,"endColumn":177},{"ruleId":"200","severity":1,"message":"201","line":59,"column":25,"nodeType":"193","endLine":59,"endColumn":236},{"ruleId":"200","severity":1,"message":"201","line":65,"column":25,"nodeType":"193","endLine":65,"endColumn":294},{"ruleId":"202","severity":1,"message":"203","line":65,"column":317,"nodeType":"204","endLine":65,"endColumn":332},{"ruleId":"202","severity":1,"message":"203","line":65,"column":408,"nodeType":"204","endLine":65,"endColumn":423},{"ruleId":"171","severity":1,"message":"205","line":12,"column":5,"nodeType":"173","messageId":"174","endLine":12,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":23,"column":22,"nodeType":"208","messageId":"209","endLine":23,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":23,"column":49,"nodeType":"208","messageId":"209","endLine":23,"endColumn":51},{"ruleId":"210","severity":2,"message":"211","line":71,"column":7,"nodeType":"173","messageId":"212","endLine":71,"endColumn":15},{"ruleId":"210","severity":2,"message":"211","line":72,"column":32,"nodeType":"173","messageId":"212","endLine":72,"endColumn":40},{"ruleId":"210","severity":2,"message":"211","line":76,"column":5,"nodeType":"173","messageId":"212","endLine":76,"endColumn":13},{"ruleId":"210","severity":2,"message":"211","line":77,"column":26,"nodeType":"173","messageId":"212","endLine":77,"endColumn":34},{"ruleId":"210","severity":2,"message":"211","line":81,"column":3,"nodeType":"173","messageId":"212","endLine":81,"endColumn":11},{"ruleId":"210","severity":2,"message":"211","line":82,"column":28,"nodeType":"173","messageId":"212","endLine":82,"endColumn":36},{"ruleId":"206","severity":1,"message":"213","line":132,"column":21,"nodeType":"208","messageId":"209","endLine":132,"endColumn":23},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'ImageUpload' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.",["214"],["215"],["214"],["215"],["214"],["215"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'CardImgOverlay' is defined but never used.","'Redirect' is defined but never used.","'assignments' is assigned a value but never used.","'Button' is defined but never used.","'App' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["214"],["215"],"'Link' is defined but never used.","'ASSIGNMENTS' is defined but never used.","'RenderAssignment' is defined but never used.","'ButtonGroup' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Errormsg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-undef","'errorMsg' is not defined.","undef","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]