[{"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reportWebVitals.js":"1","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\App.js":"2","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\login.js":"3","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\types.js":"4","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\index.js":"5","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\registerAction.js":"6","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\loginReducer.js":"7","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\loginActions.js":"8","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\registerReducer.js":"9","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\index.js":"10","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\facultyMain.js":"11","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\appNavbar.js":"12","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\store.js":"13","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\assets\\assignments\\assignments.js":"14","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\imageUpload.js":"15","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\studentMain.js":"16","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\subjectAssignments.js":"17","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\createAssignment.js":"18","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo.js":"19","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo1.js":"20","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo2.js":"21","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo3.js":"22","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo4.js":"23","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\rsa.js":"24","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demoAssesment.js":"25"},{"size":362,"mtime":1606390638599,"results":"26","hashOfConfig":"27"},{"size":2040,"mtime":1617335200361,"results":"28","hashOfConfig":"27"},{"size":10584,"mtime":1609390910466,"results":"29","hashOfConfig":"27"},{"size":219,"mtime":1606990802243,"results":"30","hashOfConfig":"27"},{"size":260,"mtime":1606799354905,"results":"31","hashOfConfig":"27"},{"size":715,"mtime":1606822804515,"results":"32","hashOfConfig":"27"},{"size":1256,"mtime":1617113562433,"results":"33","hashOfConfig":"27"},{"size":1398,"mtime":1607063238761,"results":"34","hashOfConfig":"27"},{"size":512,"mtime":1606822724560,"results":"35","hashOfConfig":"27"},{"size":500,"mtime":1606390638599,"results":"36","hashOfConfig":"27"},{"size":7189,"mtime":1617335195040,"results":"37","hashOfConfig":"27"},{"size":1915,"mtime":1607145653863,"results":"38","hashOfConfig":"27"},{"size":300,"mtime":1606796879409,"results":"39","hashOfConfig":"27"},{"size":395,"mtime":1609387927228,"results":"40","hashOfConfig":"27"},{"size":966,"mtime":1606920563252,"results":"41","hashOfConfig":"27"},{"size":1807,"mtime":1609476524754,"results":"42","hashOfConfig":"27"},{"size":5502,"mtime":1617284882963,"results":"43","hashOfConfig":"27"},{"size":3469,"mtime":1609477777592,"results":"44","hashOfConfig":"27"},{"size":20290,"mtime":1617632546209,"results":"45","hashOfConfig":"27"},{"size":11305,"mtime":1609477813663,"results":"46","hashOfConfig":"27"},{"size":11865,"mtime":1609477392759,"results":"47","hashOfConfig":"27"},{"size":16916,"mtime":1609395228137,"results":"48","hashOfConfig":"27"},{"size":11975,"mtime":1609396364066,"results":"49","hashOfConfig":"27"},{"size":4594,"mtime":1609474720808,"results":"50","hashOfConfig":"27"},{"size":3342,"mtime":1617633855564,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1pfooc6",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":6,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reportWebVitals.js",[],["119","120"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\App.js",["121"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport AppNavbar from './components/appNavbar';\r\nimport Login from './components/login';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport FacultyMain from \"./components/facultyMain\";\r\nimport ImageUpload from './components/imageUpload';\r\nimport StudentMain from './components/studentMain';\r\nimport SubjectAssignments from './components/subjectAssignments';\r\nimport CreateAssignment from './components/createAssignment';\r\nimport demo from './components/demo';\r\nimport demo1 from './components/demo1';\r\nimport demo2 from './components/demo2';\r\nimport demo3 from './components/demo3';\r\nimport demo4 from './components/demo4';\r\nimport demoAssesment from './components/demoAssesment';\r\n\r\nclass App extends Component{\r\n    render() {\r\n        return (\r\n            <Provider store={store} >\r\n                <BrowserRouter>\r\n                    <AppNavbar />\r\n                    <Switch>\r\n                        <Route exact path='/' component={Login} />\r\n                        <Route path='/facultymain' component={FacultyMain} />\r\n                        <Route path='/studentmain' component={StudentMain} />\r\n                        <Route path='/subjectassignments' component={SubjectAssignments} />\r\n                        <Route path='/create' component={CreateAssignment} />\r\n                        <Route path='/demo' component={demo} />\r\n                        <Route path='/demo1' component={demo1} />\r\n                        <Route path='/demo2' component={demo2} />\r\n                        <Route path='/demo3' component={demo3} />\r\n                        <Route path='/demo4' component={demo4} />\r\n                        <Route path='/demoAssesment' component={demoAssesment} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n",["122","123"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\login.js",["124"],"import React, { Component } from 'react';\r\nimport { Alert, TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Label, Input, Form, Spinner } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../actions/registerAction';\r\nimport { loginStudent, loginFaculty } from '../actions/loginActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        activeTab : '1',\r\n        name: '',\r\n        prn: '',\r\n        email: '',\r\n        password: '',\r\n        year: null,\r\n        email_login: '',\r\n        password_login: '',\r\n        redirect: false,\r\n        type: null\r\n    }\r\n\r\n    static propTypes = {\r\n        register: PropTypes.func.isRequired,\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n        login_msg: PropTypes.string.isRequired,\r\n        reg_msg: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, prn, email, password, year } = this.state;\r\n        const newUser = {\r\n            name, prn, email, password, year\r\n        };\r\n        this.props.register(newUser);\r\n    }\r\n\r\n    onSubmitLogin = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const { email_login, password_login } = this.state;\r\n        const newUser = {\r\n            email_login, password_login\r\n        };\r\n        if(this.state.type === \"Faculty\") this.props.loginFaculty(newUser);\r\n        else this.props.loginStudent(newUser);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: \"50px\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 m-auto\">\r\n                        <Nav tabs>\r\n                            <NavItem style={{ width: \"50%\" }}>\r\n                                <NavLink\r\n                                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                                    onClick={() => this.setState({ activeTab: '1' })}\r\n                                    style={{textAlign: \"center\"}}\r\n                                >\r\n                                    Login\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={{ width: \"50%\" }}>\r\n                                <NavLink\r\n                                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                                    onClick={() => this.setState({ activeTab: '2' })}\r\n                                    style={{textAlign: \"center\"}}\r\n                                >\r\n                                    Register\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <TabContent activeTab={this.state.activeTab} className=\"tab\">\r\n                            <TabPane tabId=\"1\" className=\"tabpane\">\r\n                            { this.props.login_msg ? <Alert color=\"danger\">{this.props.login_msg}</Alert> : null}\r\n                            <div className=\"row row-content\">\r\n                                <div className=\"col-12\">\r\n                                    <Row className=\"form-group\">\r\n                                            <Label htmlfor=\"email_login\" md={2}>Email</Label>\r\n                                            <Col md={10}>\r\n                                                <Input type=\"email\" id=\"email_login\" name=\"email_login\" placeholder=\"Enter your email\" onChange={this.onChange} />\r\n                                            </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                            <Label htmlfor=\"password_login\" md={2}>Password</Label>\r\n                                            <Col md={10}>\r\n                                                <Input type=\"password\" id=\"password_login\" name=\"password_login\" placeholder=\"Enter your password\" onChange={this.onChange} />\r\n                                            </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlfor=\"type\" md={2}>Type</Label>\r\n                                        <Col md={10}>\r\n                                            <Input type=\"select\" name=\"type\" id=\"type\" onChange={this.onChange}>\r\n                                                <option>select</option>\r\n                                                <option>Faculty</option>\r\n                                                <option>Student</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={{size:10, offset: 2}}>\r\n                                            <Button type=\"submit\" color=\"primary\" onClick={this.onSubmitLogin}>Login</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    { this.props.isAuthenticated === true ?\r\n                                        this.props.type === \"Faculty\" ? <Redirect to=\"/facultymain\" /> : <Redirect to=\"/studentmain\" /> :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\" className=\"tabpane\">\r\n                                { this.props.reg_msg ? \r\n                                    this.props.reg_msg === \"Registration successful, please login\"?\r\n                                    <Alert color=\"success\">{this.props.reg_msg}</Alert>:\r\n                                    <Alert color=\"danger\">{this.props.reg_msg}</Alert> :\r\n                                    null\r\n                                }\r\n                                <div className=\"row row-content\">\r\n                                    <div className=\"col-12\">\r\n                                        <Form id=\"register\">\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"name\" md={2}>Name</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter your name\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"prn\" md={2}>PRN</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"text\" id=\"prn\" name=\"prn\" placeholder=\"Enter your PRN\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"password\" md={2}>Password</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={this.onChange}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Label htmlfor=\"year\" md={2}>Year</Label>\r\n                                                <Col md={10}>\r\n                                                    <Input type=\"select\" name=\"year\" id=\"year\" onChange={this.onChange}>\r\n                                                        <option>select</option>\r\n                                                        <option>First Year</option>\r\n                                                        <option>Second Year</option>\r\n                                                        <option>Third Year</option>\r\n                                                        <option>Final Year</option>\r\n                                                    </Input>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"form-group\">\r\n                                                <Col md={{size:10, offset: 2}}>\r\n                                                    <Button type=\"submit\" color=\"success\" onClick={this.onSubmitRegister}>Register</Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        id: state.login.id,\r\n        name: state.login.name,\r\n        email: state.login.email,\r\n        isAuthenticated: state.login.isAuthenticated,\r\n        login_msg: state.login.msg,\r\n        reg_msg: state.register.msg,\r\n        type: state.login.type\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { register, loginStudent, loginFaculty })(Login);",["125","126"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\types.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\index.js",[],["127","128"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\registerAction.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\loginReducer.js",["129"],"import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    name: null,\r\n    email: null,\r\n    prn: null,\r\n    isAuthenticated: false,\r\n    msg: null,\r\n    type: null\r\n}\r\n\r\nexport default function( state = initialState, action) {\r\n    switch(action.type){\r\n        case LOGIN_SUCCESS:\r\n            return{\r\n                ...state,\r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                email: action.payload.email,\r\n                prn: action.payload.prn,\r\n                isAuthenticated: true,\r\n                msg: null,\r\n                type: action.payload.type\r\n            }\r\n        case LOGIN_FAIL:\r\n            return{\r\n                ...state,\r\n                id: null,\r\n                name: null,\r\n                email: null,\r\n                prn: null,\r\n                isAuthenticated: false,\r\n                msg: action.payload.msg\r\n            }\r\n        case LOGOUT:\r\n            return{\r\n                ...state,\r\n                id: null,\r\n                name: null,\r\n                email: null,\r\n                isAuthenticated: false,\r\n                msg: null\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\actions\\loginActions.js",[],["130","131"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\reducers\\registerReducer.js",["132"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\index.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\facultyMain.js",["133","134","135"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\appNavbar.js",["136","137"],"import React, { Component } from 'react';\r\nimport { \r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport App from '../App';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../actions/loginActions';\r\n\r\nclass AppNavbar extends Component {\r\n\r\n    state = {\r\n        isOpen :false\r\n    }\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n\r\n    toogle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                    <Container>\r\n                        <NavbarBrand>WCE Virtual Labs</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                {this.props.isAuthenticated === true ? \r\n                                <NavItem>\r\n                                    <NavLink style={{ cursor: \"pointer\" }} onClick={this.props.logout}>Logout</NavLink>\r\n                                </NavItem> : null  \r\n                            }  \r\n                            { this.props.isAuthenticated === false ? <Redirect to=\"/\" /> : null}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.login.isAuthenticated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(AppNavbar);","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\store.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\assets\\assignments\\assignments.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\imageUpload.js",["138","139"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ImageUpload extends Component {\r\n\r\n    state ={\r\n        file: null\r\n    }\r\n\r\n    onChange = e =>{\r\n        this.setState({ file: e.target.files[0] });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n \r\n        const formData = new FormData();\r\n\r\n        formData.append(\"img\", this.state.file, \"Bhagyaraj\");\r\n    \r\n        fetch(\"http://localhost:5000/\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(r => {\r\n            console.log(r);\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" id=\"file\" name=\"file\" onChange={this.onChange}></input>\r\n                <button onClick={this.onSubmit}>Upload</button>\r\n                <img id=\"image\" src={`http://localhost:5000/Bhagyaraj`} className=\"img-fluid\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUpload;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\studentMain.js",["140"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, ListGroup, ListGroupItem, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nclass StudentMain extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem active>Dashboard</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <ListGroup>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }} onClick={() => this.props.history.push('/subjectassignments')}>3IT401 - Cryptography and Network Security</ListGroupItem>\r\n                    {/* <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IC401 - Management and Economics</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>4OE395 - OE I data Visualization and Interpretation</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IT402 - Data Mining</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IT413 - PE Deep Learning</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IT451 - Open Source Software Lab</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IT452 - Software Testing and Quality Assurance Lab</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IT453 - Data Mining Lab</ListGroupItem>\r\n                    <ListGroupItem className=\"btn\" style={{ textAlign: \"left\" }}>3IT454 - Project</ListGroupItem> */}\r\n                </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentMain;",["141","142"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\subjectAssignments.js",["143","144","145"],"import React, { Component } from 'react';\r\nimport {\r\n  Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button, Container, Row, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport image from '../logo.jpeg';\r\nimport { ASSIGNMENTS } from '../assets/assignments/assignments';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderAssignment({assignment , onClick}) {\r\n    return(\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n            <CardBody>\r\n                <CardTitle tag=\"h5\">{assignment.name}</CardTitle>\r\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: {assignment.subject} </CardSubtitle>\r\n                <CardText> Due: {assignment.due} </CardText>\r\n                <Button color=\"primary\" onClick={onClick}>Open</Button>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nclass SubjectAssignments extends Component {\r\n\r\n    onClick = () => {\r\n        this.props.history.push();\r\n    }\r\n\r\n    render() {\r\n        // const assignments = ASSIGNMENTS.map(assignment =>{\r\n        //     return(\r\n        //         <div key={assignment.id} className=\"col-md-3 m-4 d-flex\">\r\n        //             <RenderAssignment assignment={assignment} onClick={this.onClick(assignment.link)} />\r\n        //         </div>\r\n        //     )\r\n        // })\r\n\r\n        return (\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Subject Name</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Row className=\"d-flex\">\r\n                    <div className=\"col-md-3 m-4\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Shift Cipher</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Hill Cipher</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo1')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">RSA Algorithm</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo2')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Steganography</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo3')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 m-4 d-flex\">\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" src={image} alt=\"Card image cap\" />\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">Data Encryption Standard DES</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\"> Subject: Cryptography and Network Security </CardSubtitle>\r\n                                <CardText> Due: 20/12/2020 </CardText>\r\n                                <Button color=\"primary\" onClick={() => this.props.history.push('/demo4')}>Open</Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SubjectAssignments;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\createAssignment.js",[],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo.js",["146","147","148","149","150","151","152","153","154","155","156"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo1.js",["157","158"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Container, ListGroup, ListGroupItemHeading, ListGroupItem, ListGroupItemText, Input, Button, Form, FormGroup, Label, Breadcrumb, BreadcrumbItem, ButtonGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport img1 from '../assets/images/demo1_1.png';\r\nimport img2 from '../assets/images/demo1_2.png';\r\nimport img3 from '../assets/images/demo1_3.png';\r\nimport img4 from '../assets/images/demo1_4.png';\r\nimport img5 from '../assets/images/demo1_5.png';\r\n\r\nclass demo1 extends Component {\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to=\"/subjectassignments\">Subject</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Hill Cipher</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3\">Hill Cipher</h1>\r\n                    <p className=\"lead\"></p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className=\"lead\">Created on : 20 November, 2020 <br/>  Last edit : 1 December, 2020 <br/>   Due date : 20 December, 2020</p>\r\n                    <p className=\"lead\">\r\n                        <Button color=\"success\">Mark as done</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Introduction</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>The Hill cipher is a polygraphic substitution cipher built on concepts from Linear Algebra. The Hill cipher makes use of modulo arithmetic, matrix multiplication, and matrix inverses; hence, it is a more mathematical cipher than others. The Hill cipher is also a block cipher, so, theoretically, it can work on arbitrary sized blocks.\r\n                            <br/>Since the Hill cipher is fairly complex, let’s encrypt the text “CODE” and, later, decrypt the resulting ciphertext to understand how the Hill cipher works. To keep the example simple, we will use a straightforward substitution scheme where the letter A is mapped to 0, B is mapped to 1, etc. to stick to a 2x2 key matrix. The complexity of the Hill cipher increases with the size of the key matrix.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Encryption</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Encrypting with the Hill cipher is built on the following operation:\r\n                                <br/><strong>E(K, P) = (K*P) mod 26</strong>\r\n                                <br/>Where K is our key matrix and P is the plaintext in vector form. Matrix multiplying these two terms produces the encrypted ciphertext. <br/>Let's do so step by step:\r\n                                <ol>\r\n                                    <li>\r\n                                        <p>\r\n                                        Pick a keyword to encrypt your plaintext message. Let’s work with the random keyword “DCDF”. Convert this keyword to matrix form using your substitution scheme to convert it to a numerical 2x2 key matrix.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img1} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>\r\n                                        Next, we will convert our plaintext message to vector form. Since our key matrix is 2x2, the vector needs to be 2x1 for matrix multiplication to be possible. In our case, our message is four letters long so we can split it into blocks of two and then substitute to get our plaintext vectors.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img2} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>\r\n                                        Now, we can matrix multiply the key matrix with each 2x1 plaintext vector, take the moduli of the resulting 2x1 vectors by 26, and concatenate the results to get “WWVA”, the final ciphertext.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img3} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                </ol>\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Decryption</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Decrypting with the Hill cipher is built on the following operation:\r\n                                <br/><strong style={{textAlign: \"center\"}}>D(K, C) = (K-1 *C) mod 26</strong>\r\n                                <br/>Where K is our key matrix and C is the ciphertext in vector form. Matrix multiplying the inverse of the key matrix with the ciphertext produces the decrypted plaintext. <br/>Let's do this step by step with our ciphertext, \"WWVA\":\r\n                                <ol>\r\n                                    <li>\r\n                                        <p>\r\n                                        First, we calculate the inverse of the key matrix. In doing so, we must keep the result between 0-25 using modulo 26. For this reason, the Extended Euclidean algorithm is used to find the modular multiplicative inverse of the key matrix determinant.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img4} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>\r\n                                        2.\tNext, we will multiply 2x1 blocks of the ciphertext with the inverse of the key matrix to get our original plaintext message, “CODE,” back.\r\n                                        <br/><img className=\"rounded mx-auto d-block\" src={img5} alt=\"\"  style={{height:\"400px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                                        </p>\r\n                                    </li>\r\n                                </ol>\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference video</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe width=\"100%\" height=\"554\" src=\"https://www.youtube.com/embed/qe8RZH2SX14\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    {/* <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference ppt</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe width=\"100%\" height=\"554\" src=\"https://walchandsangliacin-my.sharepoint.com/personal/bhagyaraj_haranale_walchandsangli_ac_in/_layouts/15/Doc.aspx?sourcedoc={b7dfd190-4c29-4f63-99c5-55a7b4ddab78}&amp;action=embedview&amp;wdAr=1.7777777777777777\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem> */}\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) What are the limitations of  Hill’s cipher?</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Input type=\"textarea\" rows=\"8\"></Input>\r\n                            <br/>\r\n                            <Button color=\"primary\">Submit Answer</Button>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) Polygraphic substitution is a _________ substitution where a block of letters is substituted by a word, character, number, etc.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Uniform. (ANS)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Non Uniform.\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Arbitrary\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        None of the above.\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n                <br />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo1;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo2.js",["159","160","161","162","163","164"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Container, ListGroup, ListGroupItemHeading, ListGroupItem, ListGroupItemText, Input, Button, Form, FormGroup, Label, Breadcrumb, BreadcrumbItem, ButtonGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport img from '../assets/images/demo2_1.png';\r\n\r\nclass demo2 extends Component {\r\n\r\n    step4 = \"gcd(Φ(n), e)=1 and 1<e< Φ(n)\";\r\n    step5 = \"d≡e-1 mod(Φ(n))\";\r\n    a = \"{e, n}\";\r\n    b = \"{d, n}\";\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to=\"/subjectassignments\">Subject</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>RSA Algorithm</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3\">RSA Algorithm</h1>\r\n                    <p className=\"lead\"></p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className=\"lead\">Created on : 20 November, 2020 <br/>  Last edit : 1 December, 2020 <br/>   Due date : 20 December, 2020</p>\r\n                    <p className=\"lead\">\r\n                        <Button color=\"success\">Mark as done</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Introduction</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>The pioneering paper by Diffie and Hellman introduced a new approach to cryptography and, in effect, challenged cryptologists to come up with a cryptographic algorithm that met the requirements for public-key systems. One of the first of the responses to the challenge was developed in 1977 by Ron Rivest, Adi Shamir, and Len Adleman at MIT and first published in 1978. The Rivest-Shamir-Adleman (RSA) scheme has since that time reigned supreme as the most widely accepted and implemented general-purpose approach to public-key encryption.\r\n                                <br/>RSA is based on the fact that it is always easy to calculate the product of two prime numbers, but given the product it is very difficult and time consuming to find the two prime numbers.\r\n                                <br/><br/>Steps of RSA Algorithm:\r\n                                <br/><br/>Key Generation\r\n                                <ul>\r\n                                    <li>Step 1: Select two prime numbers p and q such that p!=q</li>\r\n                                    <li>Step 2 : Calculate n=p*q</li>\r\n                                    <li>Step 3 : Calculate Φ(n)=(p-1)*(q-1)</li>\r\n                                    <li>Step 4 : Select integer e such that {this.step4}</li>\r\n                                    <li>Step 5 : Calculate {this.step5}</li>\r\n                                    <li>Step 6 : Public Key : PU={this.a}<br/>Private Key : PR={this.b}</li>\r\n                                </ul>\r\n                                <br/>Encryption\r\n                                <ul>\r\n                                    <li>Plaintext : M &lt; n</li>\r\n                                    <li>Ciphertext : C=Me mod(n)</li>\r\n                                </ul>\r\n                                <br/>Decryption\r\n                                <ul>\r\n                                    <li>Ciphertext : C</li>\r\n                                    <li>Plaintext : M=Cd mod(n)</li>\r\n                                </ul>\r\n                                <br/>\r\n                                <img className=\"rounded mx-auto d-block\" src={img} alt=\"\"  style={{height:\"200px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>The Security of RSA</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p>Four possible approaches to attacking the RSA algorithm are as follows:</p>\r\n                            <ul>\r\n                                <li><strong>Brute force:</strong> This involves trying all possible private keys.</li>\r\n                                <li><strong>Mathematical attacks:</strong> There are several approaches, all equivalent in effort to factoring the product of two primes.</li>\r\n                                <li><strong>Timing attacks:</strong>Timing attacks: These depend on the running time of the decryption algorithm.</li>\r\n                                <li><strong>Chosen ciphertext attacks:</strong> This type of attack exploits properties of the RSA algorithm.</li>\r\n                            </ul>\r\n                            <br/>\r\n                            <p>The defence against the brute-force approach is the same for RSA as for other cryptosystems, namely,\r\n                            use a large key space. Thus, the larger the number of bits in d, the better. However, because the\r\n                            calculations involved, both in key generation and in encryption/decryption, are complex, the larger the\r\n                            size of the key, the slower the system will run.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference calculator</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe src=\"https://rsa-calculator.netlify.app/\" width=\"100%\" height=\"554\"></iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference video</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe src=\"https://drive.google.com/file/d/1ualCijyOLMlnvdMQ6hRMdCdwZazQvla5/preview\" width=\"100%\" height=\"554\"></iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference ppt</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe src=\"https://walchandsangliacin-my.sharepoint.com/personal/bhagyaraj_haranale_walchandsangli_ac_in/_layouts/15/Doc.aspx?sourcedoc={d09bc6e2-bdbb-4dd6-b0cb-65fe67b2eff6}&amp;action=embedview&amp;wdAr=1.3333333333333333\" width=\"100%\" height=\"554\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) For p = 11 and q = 19 and choose e=17. Apply RSA algorithm where message=5 and find the cipher text</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Input type=\"textarea\" rows=\"8\"></Input>\r\n                            <br/>\r\n                            <Button color=\"primary\">Submit Answer</Button>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) In the RSA algorithm, we select 2 random large values ‘p’ and ‘q’. Which of the following is the property of ‘p’ and ‘q’?</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        p and q should be divisible by Ф(n)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        p and q should be co-prime\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        p and q should be prime\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        p/q should give no remainder\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) In RSA, Ф(n) = ___ in terms of p and q.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        (p)/(q)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        (p)(q)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        (p-1)(q-1)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        (p+1)(q+1)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n                <br />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo2;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo3.js",["165","166","167","168","169"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Container, ListGroup, ListGroupItemHeading, ListGroupItem, ListGroupItemText, Input, Button, Form, FormGroup, Label, Breadcrumb, BreadcrumbItem, ButtonGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport img from '../assets/images/demo3_1.png';\r\n\r\nclass demo3 extends Component {\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to=\"/subjectassignments\">Subject</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Steganography</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3\">Steganography</h1>\r\n                    <p className=\"lead\"></p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className=\"lead\">Created on : 20 November, 2020 <br/>  Last edit : 1 December, 2020 <br/>   Due date : 20 December, 2020</p>\r\n                    <p className=\"lead\">\r\n                        <Button color=\"success\">Mark as done</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Introduction</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}><strong>What is Steganography?</strong>\r\n                            <br/>Steganography is the art and science of embedding secret messages in a cover message in such a way that no one, apart from the sender and intended recipient, suspects the existence of the message \r\n                            <br/><br/>The diagram below depicts a basic steganographic model.\r\n                            </p>\r\n                            <img className=\"rounded mx-auto d-block\" src={img} alt=\"\"  style={{height:\"350px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>As the image depicts, both cover file(X) and secret message(M) are fed into steganographic encoder as input. Steganographic Encoder function, f(X,M,K) embeds the secret message into a cover file. Resulting Stego Object looks very similar to your cover file, with no visible changes. This completes encoding. To retrieve the secret message, Stego Object is fed into Steganographic Decoder.\r\n\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Historical Background</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Steganography is the practice of concealing a secret message behind a normal message. It stems from two Greek words, which are steganos, means covered and graphia, means writing. Steganography is an ancient practice, being practiced in various forms for thousands of years to keep communications private. \r\n                            <br/><br/>For Example:\r\n                            <ul>\r\n                                <li>The first use of steganography can be traced back to 440 BC when ancient Greece, people wrote messages on wood and covered it with wax, that acted as a covering medium</li>\r\n                                <li>Romans used various forms of Invisible Inks, to decipher those hidden messages light or heat were used</li>\r\n                                <li>During World War II the Germans introduced microdots, which were complete documents, pictures, and plans reduced in size to the size of a dot and were attached to normal paperwork</li>\r\n                                <li>Null Ciphers were also used to hide unencrypted secret messages in an innocent looking normal message</li>\r\n                            </ul>\r\n                            <br/>Now, we have a lot of modern steganographic techniques and tools to make sure that knows our data remains secret. Now you might be wondering if steganography is same as cryptography. No, they are two different concepts.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>HOW STEGANOGRAPHY WORKS</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Steganography replaces unneeded or unused bits in regular computer files (Graphics, sound, text) with bits of different and invisible information. Hidden information can be any other regular computer file or encrypted data.\r\n                            <br/>Steganography differs from cryptography in a way that it masks the existence of the message where cryptography works to mask the content of the message.\r\n                            <br/>Steganography sometimes used in conjunction with encryption. An encrypted file may still hide information using steganography, so even if the encrypted file is deciphered,the hidden information is not seen.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Steganography Techniques</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>Depending on the nature of the cover object(actual object in which secret data is embedded), steganography can be divided into five types:\r\n                            <ol>\r\n                                <li>\r\n                                    <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>\r\n                                    Image Steganography\r\n                                    <br/>Hiding the data by taking the cover object as the image is known as image steganography.  In digital steganography, images are widely used cover source because there are a huge number of bits present in the digital representation of an image. There are a lot of ways to hide information inside an image. Common approaches include:\r\n                                        <ul>\r\n                                            <li>Least Significant Bit Insertion</li>\r\n                                            <li>Masking and Filtering</li>\r\n                                            <li>Redundant Pattern Encoding</li>\r\n                                            <li>Encrypt and Scatter</li>\r\n                                            <li>Coding and Cosine Transformation</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>\r\n                                    Audio Steganography\r\n                                    <br/>In audio steganography, the secret message is embedded into an audio signal which alters the binary sequence of the corresponding audio file. Hiding secret messages in digital sound is a much more difficult process when compared to others, such as Image Steganography. Different methods of audio steganography include:\r\n                                        <ul>\r\n                                            <li>Least Significant Bit Insertion</li>\r\n                                            <li>Parity Encoding\t</li>\r\n                                            <li>Phase Coding</li>\r\n                                            <li>Spread Spectrum</li>\r\n                                        </ul>\r\n                                    This method hides the data in WAV, AU, and even MP3 sound files.\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>\r\n                                    Video Steganography\r\n                                    <br/>In Video Steganography you can hide kind of data into digital video format. The advantage of this type is a large amount of data can be hidden inside and the fact that it is a moving stream of images and sounds. You can think of this as the combination of Image Steganography and Audio Steganography. Two main classes of Video Steganography include:\r\n                                        <ul>\r\n                                            <li>Embedding data in uncompressed raw video and compressing it later</li>\r\n                                            <li>Embedding data directly into the compressed data stream</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>\r\n                                    Network Steganography (Protocol Steganography)\r\n                                    <br/>It is the technique of embedding information within network control protocols used in data transmission such TCP, UDP, ICMP etc. You can use steganography in some covert channels that you can find in the OSI model. For Example, you can hide information in the header of a TCP/IP packet in some fields that are either optional.\r\n                                    </p>\r\n                                </li>\r\n                            </ol>\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Best Tools to Perform Steganography</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>There are many software available that offer steganography. Some offer normal steganography, but a few offer encryption before hiding the data. These are the steganography tools which are available for free:\r\n                            <ul>\r\n                                <li>Stegosuite is a free steganography tool which is written in Java. With Stegosuite you can easily hide confidential information in image files.</li>\r\n                                <li>Steghide is an open source Steganography software that lets you hide a secret file in image or audio file.</li>\r\n                                <li>Xiao Steganography is a free software that can be used to hide data in BMP images or in WAV files.</li>\r\n                                <li>SSuite Picsel is another free portable application to hide text inside an image file but it takes a different approach when compared to other tools.</li>\r\n                                <li>OpenPuff is a professional steganographic tool where you can store files in image, audio, video or flash files</li>\r\n                            </ul>\r\n                            Well, these are few tools to perform steganography. There are many other different tools with different capabilities. However, you will get the desired results from these tools.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference video</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe width=\"100%\" height=\"554\" src=\"https://www.youtube.com/embed/rrl36aoWq0Y\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference ppt</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe src=\"//www.slideshare.net/slideshow/embed_code/key/K3WSSQz7X8SgVX\"  width=\"100%\" height=\"554\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) How is Steganography different from Cryptography?</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Input type=\"textarea\" rows=\"8\"></Input>\r\n                            <br/>\r\n                            <Button color=\"primary\">Submit Answer</Button>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) Is another data hiding technique which can be used in conjunction with cryptography for the extra-secure method of protecting data.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Cryptography\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Steganography (ANS)\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Tomography\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        Chorography\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) Steganography follows the concept of security through obscurity.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        True\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        False\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n                <br />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo3;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demo4.js",["170","171","172","173","174"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Container, ListGroup, ListGroupItemHeading, ListGroupItem, ListGroupItemText, Input, Button, Form, FormGroup, Label, Breadcrumb, BreadcrumbItem, ButtonGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport img1 from '../assets/images/demo4_1.png';\r\nimport img2 from '../assets/images/demo4_2.png';\r\nimport img3 from '../assets/images/demo4_3.png';\r\n\r\nclass demo4 extends Component {\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/studentmain\">Dashboard</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to=\"/subjectassignments\">Subject</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Data Encryption Standard DES</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Jumbotron>\r\n                    <h1 className=\"display-3\">Data Encryption Standard DES</h1>\r\n                    <p className=\"lead\"></p>\r\n                    <hr className=\"my-2\" />\r\n                    <p className=\"lead\">Created on : 20 November, 2020 <br/>  Last edit : 1 December, 2020 <br/>   Due date : 20 December, 2020</p>\r\n                    <p className=\"lead\">\r\n                        <Button color=\"success\">Mark as done</Button>\r\n                    </p>\r\n                </Jumbotron>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Introduction</ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>The most widely used encryption scheme is based on the Data Encryption Standard (DES) adopted in 1977 by the National Bureau of Standards, now the National Institute of Standards and Technology (NIST), as Federal Information Processing Standard 46 (FIPS PUB 46). The algorithm itself is referred to as the Data Encryption Algorithm (DEA).\r\n                            <br/>For DES, data are encrypted in 64-bit blocks using a 56-bit key. The algorithm transforms 64-bit input in a series of steps into a 64-bit output. The same steps, with the same key, are used to reverse the encryption.\r\n                            </p>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>DES Encryption </ListGroupItemHeading>\r\n                        <ListGroupItemText style={{ fontSize: \"20px\"}}>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>As with any encryption scheme, there are two inputs to the encryption function: the plaintext to be encrypted and the key. In this case, the plaintext must be 64 bits in length and the key is 56 bits in length.\r\n                            </p>\r\n                            <img className=\"rounded mx-auto d-block\" src={img1} alt=\"\"  style={{height:\"800px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                            <p class=\"card-text\" style={{margin: \"20px 20px 20px 20px\"}}>DES is based on the two fundamental attributes of cryptography: substitution (also called as confusion) and transposition (also called as diffusion). DES consists of 16 steps, each of which is called as a round. Each round performs the steps of substitution and transposition. \r\n                            <br/>Broad-level steps in DES :\r\n                            <ol>\r\n                                <li>In the first step, the 64 bit plain text block is handed over to an initial Permutation (IP) function.</li>\r\n                                <li>The initial permutation performed on plain text.</li>\r\n                                <li>Next the initial permutation (IP) produces two halves of the permuted block; says Left Plain Text (LPT) and Right Plain Text (RPT).</li>\r\n                                <li>Now each LPT and RPT to go through 16 rounds of encryption process.</li>\r\n                                <li>In the end, LPT and RPT are re-joined and a Final Permutation (FP) is performed on the combined block</li>\r\n                                <li>The result of this process produces 64 bit cipher text.</li>\r\n                            </ol>\r\n                            </p>\r\n                            <img className=\"rounded mx-auto d-block\" src={img2} alt=\"\"  style={{height:\"500px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                            <img className=\"rounded mx-auto d-block\" src={img3} alt=\"\"  style={{height:\"500px\", width:\"70%\",marginLeft:\"30px\"}}/>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference video</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe width=\"100%\" height=\"554\" src=\"https://www.youtube.com/embed/8TET_mmwJaM\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Reference ppt</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                        <iframe src=\"https://walchandsangliacin-my.sharepoint.com/personal/bhagyaraj_haranale_walchandsangli_ac_in/_layouts/15/Doc.aspx?sourcedoc={ff9bbf02-303e-4f05-9457-83f1539d1038}&amp;action=embedview&amp;wdAr=1.3333333333333333\" width=\"100%\" height=\"554\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) Explain the terms Confusion and Diffusion in your words with suitable example.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Input type=\"textarea\" rows=\"8\"></Input>\r\n                            <br/>\r\n                            <Button color=\"primary\">Submit Answer</Button>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) The DES Algorithm Cipher System consists of ____________rounds (iterations) each with a round key</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        12\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        18\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        9\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        16\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) In the DES algorithm, although the key size is 64 bits only 48bits are used for the encryption procedure, the rest are parity bits.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        True\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        False\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <ListGroupItemHeading>Q) In the DES algorithm the round key is __________ bit and the Round Input is ____________bits.</ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                            <Form style={{ fontSize: \"20px\"}}   >\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        48, 32\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        64,32\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        56, 24\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                                        32, 32\r\n                                    </Label>\r\n                                    </FormGroup>\r\n                                    <br/>\r\n                                    <Button color=\"primary\">Submit Answer</Button>\r\n                                </FormGroup> \r\n                            </Form>\r\n                        </ListGroupItemText>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n                <br />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default demo4;","C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\rsa.js",["175","176","177","178","179","180","181","182","183","184"],"C:\\Users\\BHAGYARAJ_34\\Desktop\\React\\virtual-lab\\src\\components\\demoAssesment.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":10,"column":8,"nodeType":"191","messageId":"192","endLine":10,"endColumn":19},{"ruleId":"185","replacedBy":"193"},{"ruleId":"187","replacedBy":"194"},{"ruleId":"189","severity":1,"message":"195","line":2,"column":99,"nodeType":"191","messageId":"192","endLine":2,"endColumn":106},{"ruleId":"185","replacedBy":"196"},{"ruleId":"187","replacedBy":"197"},{"ruleId":"185","replacedBy":"198"},{"ruleId":"187","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":13,"column":1,"nodeType":"202","endLine":47,"endColumn":2},{"ruleId":"185","replacedBy":"203"},{"ruleId":"187","replacedBy":"204"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":1,"nodeType":"202","endLine":21,"endColumn":2},{"ruleId":"189","severity":1,"message":"205","line":3,"column":18,"nodeType":"191","messageId":"192","endLine":3,"endColumn":32},{"ruleId":"189","severity":1,"message":"206","line":8,"column":10,"nodeType":"191","messageId":"192","endLine":8,"endColumn":18},{"ruleId":"189","severity":1,"message":"207","line":27,"column":15,"nodeType":"191","messageId":"192","endLine":27,"endColumn":26},{"ruleId":"189","severity":1,"message":"208","line":11,"column":5,"nodeType":"191","messageId":"192","endLine":11,"endColumn":11},{"ruleId":"189","severity":1,"message":"209","line":14,"column":8,"nodeType":"191","messageId":"192","endLine":14,"endColumn":11},{"ruleId":"189","severity":1,"message":"210","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":13},{"ruleId":"211","severity":1,"message":"212","line":35,"column":17,"nodeType":"213","endLine":35,"endColumn":97},{"ruleId":"189","severity":1,"message":"214","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"185","replacedBy":"215"},{"ruleId":"187","replacedBy":"216"},{"ruleId":"189","severity":1,"message":"205","line":3,"column":18,"nodeType":"191","messageId":"192","endLine":3,"endColumn":32},{"ruleId":"189","severity":1,"message":"217","line":7,"column":10,"nodeType":"191","messageId":"192","endLine":7,"endColumn":21},{"ruleId":"189","severity":1,"message":"218","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":26},{"ruleId":"189","severity":1,"message":"219","line":2,"column":166,"nodeType":"191","messageId":"192","endLine":2,"endColumn":177},{"ruleId":"220","severity":1,"message":"221","line":44,"column":29,"nodeType":"222","messageId":"223","endLine":44,"endColumn":31},{"ruleId":"220","severity":1,"message":"221","line":46,"column":34,"nodeType":"222","messageId":"223","endLine":46,"endColumn":36},{"ruleId":"220","severity":1,"message":"221","line":86,"column":44,"nodeType":"222","messageId":"223","endLine":86,"endColumn":46},{"ruleId":"220","severity":1,"message":"221","line":104,"column":42,"nodeType":"222","messageId":"223","endLine":104,"endColumn":44},{"ruleId":"220","severity":1,"message":"221","line":105,"column":48,"nodeType":"222","messageId":"223","endLine":105,"endColumn":50},{"ruleId":"220","severity":1,"message":"221","line":210,"column":37,"nodeType":"222","messageId":"223","endLine":210,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":247,"column":25,"nodeType":"213","endLine":247,"endColumn":236},{"ruleId":"224","severity":1,"message":"225","line":253,"column":25,"nodeType":"213","endLine":253,"endColumn":294},{"ruleId":"226","severity":1,"message":"227","line":253,"column":317,"nodeType":"228","endLine":253,"endColumn":332},{"ruleId":"226","severity":1,"message":"227","line":253,"column":408,"nodeType":"228","endLine":253,"endColumn":423},{"ruleId":"189","severity":1,"message":"219","line":2,"column":166,"nodeType":"191","messageId":"192","endLine":2,"endColumn":177},{"ruleId":"224","severity":1,"message":"225","line":92,"column":25,"nodeType":"213","endLine":92,"endColumn":236},{"ruleId":"189","severity":1,"message":"219","line":2,"column":166,"nodeType":"191","messageId":"192","endLine":2,"endColumn":177},{"ruleId":"224","severity":1,"message":"225","line":82,"column":25,"nodeType":"213","endLine":82,"endColumn":101},{"ruleId":"224","severity":1,"message":"225","line":88,"column":25,"nodeType":"213","endLine":88,"endColumn":139},{"ruleId":"224","severity":1,"message":"225","line":94,"column":25,"nodeType":"213","endLine":94,"endColumn":294},{"ruleId":"226","severity":1,"message":"227","line":94,"column":317,"nodeType":"228","endLine":94,"endColumn":332},{"ruleId":"226","severity":1,"message":"227","line":94,"column":408,"nodeType":"228","endLine":94,"endColumn":423},{"ruleId":"189","severity":1,"message":"219","line":2,"column":166,"nodeType":"191","messageId":"192","endLine":2,"endColumn":177},{"ruleId":"224","severity":1,"message":"225","line":131,"column":25,"nodeType":"213","endLine":131,"endColumn":236},{"ruleId":"224","severity":1,"message":"225","line":137,"column":25,"nodeType":"213","endLine":137,"endColumn":143},{"ruleId":"226","severity":1,"message":"227","line":137,"column":166,"nodeType":"228","endLine":137,"endColumn":181},{"ruleId":"226","severity":1,"message":"227","line":137,"column":257,"nodeType":"228","endLine":137,"endColumn":272},{"ruleId":"189","severity":1,"message":"219","line":2,"column":166,"nodeType":"191","messageId":"192","endLine":2,"endColumn":177},{"ruleId":"224","severity":1,"message":"225","line":59,"column":25,"nodeType":"213","endLine":59,"endColumn":236},{"ruleId":"224","severity":1,"message":"225","line":65,"column":25,"nodeType":"213","endLine":65,"endColumn":294},{"ruleId":"226","severity":1,"message":"227","line":65,"column":317,"nodeType":"228","endLine":65,"endColumn":332},{"ruleId":"226","severity":1,"message":"227","line":65,"column":408,"nodeType":"228","endLine":65,"endColumn":423},{"ruleId":"189","severity":1,"message":"229","line":12,"column":5,"nodeType":"191","messageId":"192","endLine":12,"endColumn":13},{"ruleId":"220","severity":1,"message":"221","line":23,"column":22,"nodeType":"222","messageId":"223","endLine":23,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":23,"column":49,"nodeType":"222","messageId":"223","endLine":23,"endColumn":51},{"ruleId":"230","severity":2,"message":"231","line":71,"column":7,"nodeType":"191","messageId":"232","endLine":71,"endColumn":15},{"ruleId":"230","severity":2,"message":"231","line":72,"column":32,"nodeType":"191","messageId":"232","endLine":72,"endColumn":40},{"ruleId":"230","severity":2,"message":"231","line":76,"column":5,"nodeType":"191","messageId":"232","endLine":76,"endColumn":13},{"ruleId":"230","severity":2,"message":"231","line":77,"column":26,"nodeType":"191","messageId":"232","endLine":77,"endColumn":34},{"ruleId":"230","severity":2,"message":"231","line":81,"column":3,"nodeType":"191","messageId":"232","endLine":81,"endColumn":11},{"ruleId":"230","severity":2,"message":"231","line":82,"column":28,"nodeType":"191","messageId":"232","endLine":82,"endColumn":36},{"ruleId":"220","severity":1,"message":"233","line":132,"column":21,"nodeType":"222","messageId":"223","endLine":132,"endColumn":23},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'ImageUpload' is defined but never used.","Identifier","unusedVar",["234"],["235"],"'Spinner' is defined but never used.",["234"],["235"],["234"],["235"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["234"],["235"],"'CardImgOverlay' is defined but never used.","'Redirect' is defined but never used.","'assignments' is assigned a value but never used.","'Button' is defined but never used.","'App' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.",["234"],["235"],"'ASSIGNMENTS' is defined but never used.","'RenderAssignment' is defined but never used.","'ButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Errormsg' is defined but never used.","no-undef","'errorMsg' is not defined.","undef","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]